{"version":3,"sources":["constants/constants.js","hooks/useData.js","components/table/Table.js","components/table/TableSection.js","components/modules/misc/index.js","components/reusable/Button.js"],"names":["TABLE_NAMES","useData","tableName","useState","data","setData","error","setError","useEffect","find","name","fetch","getURL","headers","Accept","then","res","ok","json","Error","alasql","promise","toast","success","catch","e","message","convertToJson","atob","content","replace","fetchData","Table","columns","useTable","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","previousPage","nextPage","canPreviousPage","canNextPage","state","setPageSize","pageOptions","gotoPage","pageCount","className","map","headerGroup","getHeaderGroupProps","column","scope","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","Button","handleClick","disabled","pageIndex","length","value","pageSize","onChange","Number","target","onClick","xmlns","viewBox","fill","id","fillRule","d","clipRule","TableSection","React","memo","query","useMemo","Object","keys","key","Header","accessor","queryData","slice","role","completeData","src","Loader","alt","classNames","classes","filter","Boolean","join","children","PageButton","rest","type"],"mappings":"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","file":"static/js/6.117081fa.chunk.js","sourcesContent":["const TABLE_NAMES = [\r\n  \"categories\",\r\n  \"customers\",\r\n  \"employee_territories\",\r\n  \"employees\",\r\n  \"order_details\",\r\n  \"orders\",\r\n  \"products\",\r\n  \"regions\",\r\n  \"shippers\",\r\n  \"suppliers\",\r\n  \"territories\",\r\n];\r\n\r\nexport default TABLE_NAMES;\r\n","import { useEffect, useState } from \"react\";\r\nimport alasql from \"alasql\";\r\nimport toast from \"react-hot-toast\";\r\nimport TABLE_NAMES from \"../constants/constants\";\r\n\r\nconst getURL = (name) =>\r\n  `https://api.github.com/repos/graphql-compose/graphql-compose-examples/contents/examples/northwind/data/csv/${name}.csv`;\r\n\r\nconst useData = (tableName) => {\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const convertToJson = (data) => {\r\n    alasql\r\n      .promise(\"SELECT * FROM CSV(?, {headers: false, separator:','})\", [data])\r\n      .then((data) => {\r\n        setData(data);\r\n        toast.success(\"Query run successfully\");\r\n      })\r\n      .catch((e) => {\r\n        toast.error(e.message);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = (tableName) => {\r\n      setData([]);\r\n      const name = TABLE_NAMES.find((name) => name === tableName);\r\n      if (name) {\r\n        setError(false);\r\n        fetch(getURL(tableName), {\r\n          headers: {\r\n            Accept: \"application/vnd.github.v4+raw\",\r\n          },\r\n        })\r\n          .then((res) => {\r\n            if (res.ok) {\r\n              return res.json();\r\n            } else {\r\n              throw new Error(\"Something went wrong\");\r\n            }\r\n          })\r\n          .then((data) => convertToJson(atob(data.content.replace(\"\\n\", \"\"))))\r\n          .catch((error) => {\r\n            toast.error(error.message);\r\n          });\r\n      } else {\r\n        setError(true);\r\n        toast.error(\"Please enter a valid query\");\r\n      }\r\n    };\r\n    fetchData(tableName);\r\n  }, [tableName]);\r\n\r\n  return { data,error };\r\n};\r\n\r\nexport default useData;\r\n","import React from \"react\";\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  usePagination,\r\n} from \"react-table\";\r\nimport { Button, PageButton } from \"../reusable/Button\";\r\n\r\n\r\nconst Table = ({ columns, data}) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    previousPage,\r\n    nextPage,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    state,\r\n    setPageSize,\r\n    pageOptions,\r\n    gotoPage,\r\n    pageCount,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n  return (\r\n    <>\r\n     \r\n      {/* table */}\r\n      <div className=\"shadow overflow-auto border-b border-gray-200 sm:rounded-lg\">\r\n        <table\r\n          {...getTableProps()}\r\n          className=\"min-w-full divide-y divide-gray-200\"\r\n        >\r\n          <thead className=\"bg-primary-dark\">\r\n            {headerGroups.map((headerGroup) => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th\r\n                    scope=\"col\"\r\n                    className=\"px-6 py-4 text-left text-xs font-medium text-white  uppercase tracking-wider\"\r\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                  >\r\n                    <span className=\" hover:text-gray-300\">\r\n                      {column.render(\"Header\")}\r\n                    </span>\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? \" ▼\"\r\n                          : \" ▲\"\r\n                        : \"\"}\r\n                    </span>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody\r\n            {...getTableBodyProps()}\r\n            className=\"bg-white text-black divide-y divide-gray-200\"\r\n          >\r\n            {page.map((row, i) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell) => {\r\n                    return (\r\n                      <td\r\n                        {...cell.getCellProps()}\r\n                        className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\"\r\n                      >\r\n                        {cell.render(\"Cell\")}\r\n                      </td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {/* Pagination */}\r\n      <div className=\"py-3 flex items-center justify-between\">\r\n        <div className=\"flex-1 flex justify-between sm:hidden\">\r\n          <Button\r\n            handleClick={() => previousPage()}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            Previous\r\n          </Button>\r\n          <Button handleClick={() => nextPage()} disabled={!canNextPage}>\r\n            Next\r\n          </Button>\r\n        </div>\r\n        <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\r\n          <div className=\"flex gap-x-2\">\r\n            <span className=\"text-sm text-gray-700\">\r\n              Page <span className=\"font-medium\">{state.pageIndex + 1}</span> of{\" \"}\r\n              <span className=\"font-medium\">{pageOptions.length}</span>\r\n            </span>\r\n            <select\r\n              className=\"text-black outline-none bg-white border-2 border-transparent focus:border-primary-dark rounded-md cursor-pointer\"\r\n              value={state.pageSize}\r\n              onChange={(e) => {\r\n                setPageSize(Number(e.target.value));\r\n              }}\r\n            >\r\n              {[5, 10, 20].map((pageSize) => (\r\n                <option key={pageSize} value={pageSize}>\r\n                  Show {pageSize}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <nav\r\n              className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\"\r\n              aria-label=\"Pagination\"\r\n            >\r\n              <PageButton\r\n                className=\"rounded-l-md\"\r\n                onClick={() => gotoPage(0)}\r\n                disabled={!canPreviousPage}\r\n              >\r\n                <span className=\"sr-only\">First</span>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-5 w-5\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  fill=\"currentColor\"\r\n                >\r\n                  <title id=\"pageOne\">Go to page one</title>\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M15.707 15.707a1 1 0 01-1.414 0l-5-5a1 1 0 010-1.414l5-5a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 010 1.414zm-6 0a1 1 0 01-1.414 0l-5-5a1 1 0 010-1.414l5-5a1 1 0 011.414 1.414L5.414 10l4.293 4.293a1 1 0 010 1.414z\"\r\n                    clipRule=\"evenodd\"\r\n                  />\r\n                </svg>\r\n              </PageButton>\r\n              <PageButton\r\n                onClick={() => previousPage()}\r\n                disabled={!canPreviousPage}\r\n              >\r\n                <span className=\"sr-only\">Previous</span>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-5 w-5\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  fill=\"currentColor\"\r\n                >\r\n                  <title id=\"previousPage\">Go to previous page</title>\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\r\n                    clipRule=\"evenodd\"\r\n                  />\r\n                </svg>\r\n              </PageButton>\r\n              <PageButton onClick={() => nextPage()} disabled={!canNextPage}>\r\n                <span className=\"sr-only\">Next</span>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-5 w-5\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  fill=\"currentColor\"\r\n                >\r\n                  <title id=\"nextPage\">Go to next page</title>\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n                    clipRule=\"evenodd\"\r\n                  />\r\n                </svg>\r\n              </PageButton>\r\n              <PageButton\r\n                className=\"rounded-r-md\"\r\n                onClick={() => gotoPage(pageCount - 1)}\r\n                disabled={!canNextPage}\r\n              >\r\n                <span className=\"sr-only\">Last</span>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-5 w-5\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  fill=\"currentColor\"\r\n                >\r\n                  <title id=\"lastPage\">Go to last page</title>\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M10.293 15.707a1 1 0 010-1.414L14.586 10l-4.293-4.293a1 1 0 111.414-1.414l5 5a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0z\"\r\n                    clipRule=\"evenodd\"\r\n                  />\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M4.293 15.707a1 1 0 010-1.414L8.586 10 4.293 5.707a1 1 0 011.414-1.414l5 5a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0z\"\r\n                    clipRule=\"evenodd\"\r\n                  />\r\n                </svg>\r\n              </PageButton>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useMemo } from \"react\";\r\nimport useData from \"../../hooks/useData\";\r\nimport Table from \"./Table\";\r\n\r\nimport Loader from \"../../assets/imgs/loader.svg\";\r\n\r\nconst TableSection = React.memo(({ query }) => {\r\n  const { data, error } = useData(query);\r\n\r\n  const columns = useMemo(() => {\r\n    if (data.length > 0) {\r\n      return Object.keys(data[0]).map((key) => {\r\n        const result = data[0][key]\r\n          .replace(/([A-Z]+)/g, \" $1\")\r\n          .replace(/([A-Z][a-z])/g, \" $1\");\r\n\r\n        return {\r\n          Header: result,\r\n          accessor: key,\r\n        };\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  const queryData = useMemo(() => data.slice(1), [data]);\r\n  if (error)\r\n    return (\r\n      <section\r\n        className={\"col-start-1 col-end-3 row-start-3 row-end-4 text-white m-6\"}\r\n      >\r\n        <h1 className=\"text-center font-bold text-xl text-primary-dark\">\r\n          Something Went Wrong{\" \"}\r\n          <span role=\"img\" aria-label=\"sad face\">\r\n            😔\r\n          </span>\r\n        </h1>\r\n      </section>\r\n    );\r\n  return (\r\n    <>\r\n      <section\r\n        className={ \"col-start-1 col-end-3 row-start-3 row-end-4 text-white mx-6 my-12 lg:mx-12 overflow-hidden\"}\r\n      >\r\n        {data.length > 0 ? (\r\n          <>\r\n            \r\n            <Table\r\n              columns={columns}\r\n              completeData={data}\r\n              data={queryData}\r\n              query={query}\r\n            />\r\n          </>\r\n        ) : (\r\n          <img src={Loader} className=\"w-20 mx-auto\" alt=\"loader\" />\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default TableSection;\r\n","export function classNames(...classes) {\r\n    return classes.filter(Boolean).join(\" \");\r\n  }","import React from \"react\";\r\nimport { classNames } from \"../../components/modules/misc\";\r\n\r\nexport const Button = ({ children, className, handleClick }) => {\r\n  return (\r\n    <button\r\n      className={classNames(\r\n        \"bg-primary-dark hover:bg-secondary-dark transition-colors text-white rounded-md font-semibold px-4 py-2 my-4 shadow-lg\",\r\n        className\r\n      )}\r\n      onClick={handleClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport const PageButton = ({ children, className, ...rest }) => {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={classNames(\r\n        \"relative inline-flex items-center px-2 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\",\r\n        className\r\n      )}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n"],"sourceRoot":""}